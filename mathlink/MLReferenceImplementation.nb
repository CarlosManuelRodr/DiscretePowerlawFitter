(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     53603,       1184]
NotebookOptionsPosition[     50221,       1117]
NotebookOutlinePosition[     50610,       1133]
CellTagsIndexPosition[     50567,       1130]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Discrete Power-law fitter", "Title",
 CellChangeTimes->{{3.854639174702952*^9, 
  3.8546391789811487`*^9}},ExpressionUUID->"d598f596-2801-4778-8c27-\
dca3abeee197"],

Cell[BoxData[
 RowBox[{"Needs", "[", 
  RowBox[{"\"\<ProgressMapping`\>\"", ",", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<ProgressMapping.wl\>\""}], "}"}], "]"}]}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.854647387248567*^9, 3.854647387251067*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"ea06bf2b-47a9-4df9-a1c3-95c1b9085f4a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"DiscretePowerLawDistributionPDF", "[", 
    RowBox[{"\[Alpha]_", ",", "xMin_", ",", "x_"}], "]"}], ":=", 
   FractionBox[
    SuperscriptBox["x", 
     RowBox[{"-", "\[Alpha]"}]], 
    RowBox[{"HurwitzZeta", "[", 
     RowBox[{"\[Alpha]", ",", "xMin"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DiscretePowerLawDistributionCDF", "[", 
    RowBox[{"\[Alpha]_", ",", "xMin_", ",", "x_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{"HurwitzZeta", "[", 
     RowBox[{"\[Alpha]", ",", "x"}], "]"}], 
    RowBox[{"HurwitzZeta", "[", 
     RowBox[{"\[Alpha]", ",", "xMin"}], "]"}]]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"EmpiricalCDF", "[", 
    RowBox[{"data_", ",", "x_"}], "]"}], ":=", " ", 
   RowBox[{"N", "[", 
    RowBox[{"1", "-", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"EmpiricalDistribution", "[", "data", "]"}], ",", 
       RowBox[{"x", "-", "1"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GeneratePowerlawSampleData", "[", 
    RowBox[{"\[Alpha]_", ",", "xMin_", ",", "xMax_", ",", 
     RowBox[{"sampleSize_", " ", ":", "1000"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "dist", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"dist", " ", "=", " ", 
       RowBox[{"ProbabilityDistribution", "[", 
        RowBox[{
         RowBox[{"DiscretePowerLawDistributionPDF", "[", 
          RowBox[{"\[Alpha]", ",", "xMin", ",", "x"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xMin", ",", "xMax", ",", "1"}], "}"}]}], "]"}]}],
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"RandomVariate", "[", 
       RowBox[{"dist", ",", "sampleSize"}], "]"}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.846435065800014*^9, 3.84643515944833*^9}, {
  3.8464371478413267`*^9, 3.846437156620235*^9}, {3.84643831536322*^9, 
  3.84643831659608*^9}, {3.854639387696631*^9, 3.8546393879468603`*^9}, {
  3.8546395631150427`*^9, 3.854639583972419*^9}, {3.855151185293474*^9, 
  3.855151185443304*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"58a37c1e-fe03-4d2e-af23-031428dc3f7c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SelectTail", "[", 
    RowBox[{"data_", ",", "xMin_"}], "]"}], ":=", 
   RowBox[{"Select", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{"#", ">=", "xMin"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"SelectBulk", "[", 
    RowBox[{"data_", ",", "xMin_"}], "]"}], ":=", 
   RowBox[{"Select", "[", 
    RowBox[{"data", ",", 
     RowBox[{
      RowBox[{"#", "<", "xMin"}], "&"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Estimate\[Alpha]", "[", 
    RowBox[{"data_", ",", "xMin_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "tail", ",", "\[Alpha]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tail", " ", "=", " ", 
       RowBox[{"SelectTail", "[", 
        RowBox[{"data", ",", "xMin"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"Length", "[", "tail", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", " ", "=", " ", 
       RowBox[{"N", "[", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"n", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             UnderoverscriptBox["\[Sum]", 
              RowBox[{"i", "=", "1"}], "n"], 
             RowBox[{"Log", "[", 
              FractionBox[
               RowBox[{"tail", "[", 
                RowBox[{"[", "i", "]"}], "]"}], 
               RowBox[{"xMin", "-", 
                FractionBox["1", "2"]}]], "]"}]}], ")"}], 
           RowBox[{"-", "1"}]]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alpha\>\"", "->", "\[Alpha]"}], ",", " ", 
        RowBox[{"\"\<xMin\>\"", "->", "xMin"}]}], "|>"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Estimate\[Alpha]Precise", "[", 
    RowBox[{"data_", ",", "xMin_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tail", ",", "L"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tail", " ", "=", " ", 
       RowBox[{"SelectTail", "[", 
        RowBox[{"data", ",", "xMin"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"L", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", 
           RowBox[{"CalculateLogLikelihood", "[", 
            RowBox[{"tail", ",", "\[Alpha]", ",", " ", "xMin"}], "]"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Alpha]", ",", "1.5", ",", "3.51", ",", "0.01"}], "}"}]}],
         "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alpha\>\"", "->", 
         RowBox[{
          RowBox[{"MaximalBy", "[", 
           RowBox[{"L", ",", "Last"}], "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ",", " ", 
        RowBox[{"\"\<xMin\>\"", "->", "xMin"}]}], "|>"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.854639256832531*^9, 3.8546393273686657`*^9}, {
   3.8546394214324303`*^9, 3.854639425963347*^9}, {3.854639925587644*^9, 
   3.8546399415351667`*^9}, {3.854640097509407*^9, 3.854640109167981*^9}, {
   3.854645644475971*^9, 3.85464568669198*^9}, {3.854721404716267*^9, 
   3.8547214346178837`*^9}, {3.855151878234167*^9, 3.855151901789734*^9}, {
   3.8551519800113983`*^9, 3.8551520284676*^9}, 3.855152093425137*^9, {
   3.85515215402083*^9, 3.855152167851363*^9}, {3.8551522537749863`*^9, 
   3.8551522619847383`*^9}},
 CellLabel->
  "In[169]:=",ExpressionUUID->"797e8a45-3ac6-42ad-9d9f-dcac415f5695"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"KSStatistic", "[", 
    RowBox[{"data_", ",", "xMin_Integer"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xMax", ",", "tail", ",", "\[Alpha]Estimator", ",", "diff"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tail", " ", "=", " ", 
       RowBox[{"SelectTail", "[", 
        RowBox[{"data", ",", "xMin"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]Estimator", " ", "=", " ", 
       RowBox[{
        RowBox[{"Estimate\[Alpha]Precise", "[", 
         RowBox[{"data", ",", "xMin"}], "]"}], "[", "\"\<Alpha\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"xMax", " ", "=", " ", 
       RowBox[{"Max", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"diff", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"EmpiricalCDF", "[", 
            RowBox[{"tail", ",", "x"}], "]"}], "-", 
           RowBox[{"DiscretePowerLawDistributionCDF", "[", 
            RowBox[{"\[Alpha]Estimator", ",", "xMin", ",", "x"}], "]"}]}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "xMin", ",", "xMax"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Max", "[", "diff", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KSStatistic", "[", 
    RowBox[{"data_", ",", "model_Association"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"xMax", ",", "tail", ",", "\[Alpha]Estimator", ",", "diff"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tail", " ", "=", " ", 
       RowBox[{"SelectTail", "[", 
        RowBox[{"data", ",", 
         RowBox[{"model", "[", "\"\<xMin\>\"", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]Estimator", " ", "=", " ", 
       RowBox[{"model", "[", "\"\<Alpha\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"xMax", " ", "=", " ", 
       RowBox[{"Max", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"diff", " ", "=", " ", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{
           RowBox[{"EmpiricalCDF", "[", 
            RowBox[{"tail", ",", "x"}], "]"}], "-", 
           RowBox[{"DiscretePowerLawDistributionCDF", "[", 
            RowBox[{"\[Alpha]Estimator", ",", 
             RowBox[{"model", "[", "\"\<xMin\>\"", "]"}], ",", "x"}], "]"}]}],
           "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", 
           RowBox[{"model", "[", "\"\<xMin\>\"", "]"}], ",", "xMax"}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Max", "[", "diff", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"KSStatistic", "[", "data_", "]"}], ":=", 
   RowBox[{"KSStatistic", "[", 
    RowBox[{"data", ",", 
     RowBox[{"Estimate\[Alpha]AndXMin", "[", "data", "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateLogLikelihood", "[", 
    RowBox[{"data_", ",", "alpha_", ",", " ", "xMin_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tail", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tail", " ", "=", " ", 
       RowBox[{"SelectTail", "[", 
        RowBox[{"data", ",", "xMin"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"Length", "[", "tail", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"N", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"-", " ", "n"}], " ", "*", " ", 
         RowBox[{"Log", "[", 
          RowBox[{"HurwitzZeta", "[", 
           RowBox[{"alpha", ",", "xMin"}], "]"}], "]"}]}], "-", 
        RowBox[{"alpha", " ", 
         RowBox[{
          UnderoverscriptBox["\[Sum]", 
           RowBox[{"i", "=", "1"}], "n"], 
          RowBox[{"Log", "[", 
           RowBox[{"tail", "[", 
            RowBox[{"[", "i", "]"}], "]"}], "]"}]}]}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Estimate\[Alpha]AndXMin", "[", "data_", "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"minElement", ",", "maxElement", ",", "xMin"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"minElement", ",", "maxElement"}], "}"}], " ", "=", " ", 
       RowBox[{"MinMax", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"xMin", " ", "=", " ", 
       RowBox[{
        RowBox[{"MinimalBy", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"KSStatistic", "[", 
               RowBox[{"data", ",", "x"}], "]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "minElement", ",", 
              RowBox[{"maxElement", "-", "1"}]}], "}"}]}], "]"}], ",", 
          "Last"}], "]"}], "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"Estimate\[Alpha]Precise", "[", 
       RowBox[{"data", ",", "xMin"}], "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateBootstrapReplica", "[", 
    RowBox[{"data_", ",", "model_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "n", ",", "bulk", ",", " ", "tail", ",", "tailProbability", ",", 
       "tailReplica", ",", "bulkReplica"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"Length", "[", "data", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"bulk", " ", "=", " ", 
       RowBox[{"SelectBulk", "[", 
        RowBox[{"data", ",", 
         RowBox[{"model", "[", "\"\<xMin\>\"", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tail", " ", "=", " ", 
       RowBox[{"SelectTail", "[", 
        RowBox[{"data", ",", 
         RowBox[{"model", "[", "\"\<xMin\>\"", "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tailProbability", " ", "=", " ", 
       RowBox[{"1.0", " ", "-", " ", 
        FractionBox[
         RowBox[{"Length", "[", "bulk", "]"}], "n"]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tailReplica", " ", "=", " ", 
       RowBox[{"GeneratePowerlawSampleData", "[", 
        RowBox[{
         RowBox[{"model", "[", "\"\<Alpha\>\"", "]"}], ",", 
         RowBox[{"model", "[", "\"\<xMin\>\"", "]"}], ",", 
         RowBox[{"Max", "[", "data", "]"}], ",", 
         RowBox[{"Floor", "[", 
          RowBox[{"n", "*", "tailProbability"}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"bulkReplica", " ", "=", " ", 
       RowBox[{"RandomSample", "[", 
        RowBox[{"bulk", ",", 
         RowBox[{"n", "-", 
          RowBox[{"Floor", "[", 
           RowBox[{"n", "*", "tailProbability"}], "]"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"RandomSample", "[", 
       RowBox[{"Join", "[", 
        RowBox[{"tailReplica", ",", " ", "bulkReplica"}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GenerateFixedMinBootstrapReplica", "[", 
    RowBox[{"model_", ",", "xMax_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"GeneratePowerlawSampleData", "[", 
    RowBox[{
     RowBox[{"model", "[", "\"\<Alpha\>\"", "]"}], ",", 
     RowBox[{"model", "[", "\"\<xMin\>\"", "]"}], ",", "xMax", ",", "n"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateGOF", "[", 
    RowBox[{"data_", ",", 
     RowBox[{"replicas_", ":", "2000"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "model", ",", "ksOfData", ",", "syntheticKsValues", ",", "pValue"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"model", " ", "=", " ", 
       RowBox[{"Estimate\[Alpha]AndXMin", "[", "data", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ksOfData", " ", "=", " ", 
       RowBox[{"KSStatistic", "[", 
        RowBox[{"data", ",", "model"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"syntheticKsValues", " ", "=", " ", 
       RowBox[{"ProgressTable", "[", 
        RowBox[{
         RowBox[{"KSStatistic", "[", 
          RowBox[{"GenerateBootstrapReplica", "[", 
           RowBox[{"data", ",", "model"}], "]"}], "]"}], ",", "replicas"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pValue", " ", "=", " ", 
       RowBox[{"N", "[", 
        FractionBox[
         RowBox[{"Count", "[", 
          RowBox[{"syntheticKsValues", ",", 
           RowBox[{"x_", " ", "/;", " ", 
            RowBox[{"x", ">", "ksOfData"}]}]}], "]"}], 
         RowBox[{"Length", "[", "syntheticKsValues", "]"}]], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alpha\>\"", "->", 
         RowBox[{"model", "[", "\"\<Alpha\>\"", "]"}]}], ",", 
        RowBox[{"\"\<xMin\>\"", "->", 
         RowBox[{"model", "[", "\"\<xMin\>\"", "]"}]}], ",", 
        RowBox[{"\"\<p-value\>\"", "->", "pValue"}]}], "|>"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CalculateFixedMinGOF", "[", 
    RowBox[{"data_", ",", "xMin_", ",", 
     RowBox[{"replicas_", ":", "2000"}]}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "fixedMinModel", ",", "ksOfData", ",", "n", ",", "syntheticKsValues", 
       ",", "pValue"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"fixedMinModel", " ", "=", " ", 
       RowBox[{"Estimate\[Alpha]Precise", "[", 
        RowBox[{"data", ",", "xMin"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ksOfData", " ", "=", " ", 
       RowBox[{"KSStatistic", "[", 
        RowBox[{"data", ",", "xMin"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"n", " ", "=", " ", 
       RowBox[{"Length", "[", 
        RowBox[{"SelectTail", "[", 
         RowBox[{"data", ",", "xMin"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"syntheticKsValues", " ", "=", " ", 
       RowBox[{"ProgressTable", "[", 
        RowBox[{
         RowBox[{"KSStatistic", "[", 
          RowBox[{"GenerateFixedMinBootstrapReplica", "[", 
           RowBox[{"fixedMinModel", ",", 
            RowBox[{"Max", "[", "data", "]"}], ",", "n"}], "]"}], "]"}], ",", 
         "replicas"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"pValue", " ", "=", " ", 
       RowBox[{"N", "[", 
        FractionBox[
         RowBox[{"Count", "[", 
          RowBox[{"syntheticKsValues", ",", 
           RowBox[{"x_", " ", "/;", " ", 
            RowBox[{"x", ">", "ksOfData"}]}]}], "]"}], 
         RowBox[{"Length", "[", "syntheticKsValues", "]"}]], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{"\"\<Alpha\>\"", "->", 
         RowBox[{"fixedMinModel", "[", "\"\<Alpha\>\"", "]"}]}], ",", 
        RowBox[{"\"\<xMin\>\"", "->", 
         RowBox[{"fixedMinModel", "[", "\"\<xMin\>\"", "]"}]}], ",", 
        RowBox[{"\"\<p-value\>\"", "->", "pValue"}]}], "|>"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.854639842812039*^9, 3.854639854454111*^9}, 
   3.8546399071368113`*^9, {3.854639962975018*^9, 3.8546399980077972`*^9}, 
   3.854640092440226*^9, {3.854641592005899*^9, 3.854641632341305*^9}, {
   3.854641945151808*^9, 3.854642038363447*^9}, {3.854645555851392*^9, 
   3.8546456216936893`*^9}, {3.854645744593898*^9, 3.854645747743281*^9}, {
   3.854645788892951*^9, 3.85464583157515*^9}, {3.854645890688324*^9, 
   3.854646166609845*^9}, {3.854646295780518*^9, 3.854646296086625*^9}, {
   3.8546464716595993`*^9, 3.854646570144018*^9}, {3.854646714048559*^9, 
   3.854646720320017*^9}, {3.854646846687818*^9, 3.8546468477321777`*^9}, {
   3.854646969835574*^9, 3.854646996054715*^9}, {3.854647185615714*^9, 
   3.854647218180624*^9}, {3.854649002631743*^9, 3.8546491797879457`*^9}, {
   3.8547209249822493`*^9, 3.854720935506174*^9}, {3.854720970020808*^9, 
   3.8547209838059387`*^9}, {3.8547212280387707`*^9, 3.854721230367402*^9}, {
   3.8547217022339287`*^9, 3.854721904070415*^9}, {3.8547219366053543`*^9, 
   3.854721964423541*^9}, {3.855151325565826*^9, 3.8551513257404757`*^9}, {
   3.855151490697371*^9, 3.855151680249939*^9}, {3.855151793910859*^9, 
   3.855151817527679*^9}, {3.855151924779797*^9, 3.8551519517731447`*^9}, {
   3.855152119288164*^9, 3.855152127550393*^9}, 3.8551523522850943`*^9},
 CellLabel->
  "In[180]:=",ExpressionUUID->"41e6f6ee-aee7-473b-a67a-f5f9b9951d54"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sample", " ", "=", " ", 
  RowBox[{"GeneratePowerlawSampleData", "[", 
   RowBox[{"2.5", ",", "1", ",", "100", ",", "200"}], "]"}]}]], "Input",
 CellLabel->"In[43]:=",ExpressionUUID->"b7cba7ef-e555-45df-b783-3ccace02fcba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", 
   "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
   ",", "1", ",", "1", ",", "3", ",", "1", ",", "1", ",", "1", ",", "2", ",", 
   "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", 
   ",", "4", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", 
   "2", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "19",
    ",", "1", ",", "1", ",", "4", ",", "1", ",", "2", ",", "1", ",", "1", ",",
    "2", ",", "4", ",", "1", ",", "3", ",", "1", ",", "1", ",", "1", ",", "1",
    ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "2", ",", "1", ",",
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "9", ",", "1",
    ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "3",
    ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
    ",", "2", ",", "1", ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",",
    "1", ",", "2", ",", "4", ",", "2", ",", "1", ",", "1", ",", "1", ",", "3",
    ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
    "3", ",", "1", ",", "1", ",", "8", ",", "1", ",", "1", ",", "1", ",", "1",
    ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
    "4", ",", "1", ",", "1", ",", "1", ",", "1", ",", "3", ",", "1", ",", "1",
    ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2",
    ",", "2", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",",
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "2", ",", "1", ",", "1",
    ",", "1", ",", "1", ",", "1", ",", "5", ",", "1", ",", "1", ",", "1", ",",
    "1", ",", "1", ",", "1", ",", "15", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.854640044183934*^9, 3.854640053478587*^9}, 
   3.8547213693121567`*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"2ee18e45-4758-452c-a3f9-bf6a84672970"]
}, Open  ]],

Cell[TextData[{
 "Fixed ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "min"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "90240013-d179-4d87-8348-86da3f77d792"]
}], "Text",
 CellChangeTimes->{{3.8547220668503933`*^9, 
  3.8547220741136827`*^9}},ExpressionUUID->"52f2c1be-5ac0-40d7-82c5-\
074323bf8130"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fixedMinModel", " ", "=", " ", 
  RowBox[{"Estimate\[Alpha]", "[", 
   RowBox[{"sample", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8546400663504963`*^9, 3.8546400706455593`*^9}, {
  3.854721461732924*^9, 3.8547214641851473`*^9}, {3.854721541116397*^9, 
  3.854721541213317*^9}, {3.8547219976984663`*^9, 3.8547220004668617`*^9}, {
  3.854722293176149*^9, 3.8547222935943823`*^9}},
 CellLabel->
  "In[127]:=",ExpressionUUID->"f87b5041-8a67-4378-a373-817bfd2a10ac"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Alpha\"\>", "\[Rule]", "2.6828117498454724`"}], ",", 
   RowBox[{"\<\"xMin\"\>", "\[Rule]", "4"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.854640071024679*^9, {3.854640113837489*^9, 3.85464011527104*^9}, {
   3.854721378166637*^9, 3.854721379645163*^9}, {3.854721439477704*^9, 
   3.854721464412677*^9}, 3.8547215415606956`*^9, {3.8547219983190613`*^9, 
   3.85472200079062*^9}, 3.854722239364834*^9, 3.854722294430575*^9},
 CellLabel->
  "Out[127]=",ExpressionUUID->"50e80d84-db4d-4319-9264-90522b4f6685"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalculateFixedMinGOF", "[", 
  RowBox[{"sample", ",", "4", ",", "2000"}], "]"}]], "Input",
 CellChangeTimes->{{3.854722010138616*^9, 3.8547220222459183`*^9}, {
  3.854722246819339*^9, 3.854722246984324*^9}, {3.854722296873567*^9, 
  3.854722297564144*^9}},
 CellLabel->
  "In[128]:=",ExpressionUUID->"8b78ab32-51c8-4a33-afae-df58d9f3bcc2"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Alpha\"\>", "\[Rule]", "2.6828117498454724`"}], ",", 
   RowBox[{"\<\"xMin\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"p-value\"\>", "\[Rule]", "0.0075`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.854722016192799*^9, 3.854722036596977*^9}, 
   3.8547222790812607`*^9, 3.854722325467259*^9},
 CellLabel->
  "Out[128]=",ExpressionUUID->"609378c4-4e73-432d-ac3e-10866c60e8f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KSStatistic", "[", 
  RowBox[{"sample", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.854640124019781*^9, 3.854640128093337*^9}, {
   3.854648425680745*^9, 3.854648427971443*^9}, 3.8546489184011383`*^9, {
   3.854722099579541*^9, 3.8547220997265882`*^9}, {3.85472375758077*^9, 
   3.854723757639225*^9}},
 CellLabel->
  "In[129]:=",ExpressionUUID->"48b82f1e-faad-4af8-af77-5c3d3fa3d767"],

Cell[BoxData["0.5`"], "Output",
 CellChangeTimes->{{3.854640128452734*^9, 3.854640130808606*^9}, 
   3.854641981901308*^9, {3.8546484236499147`*^9, 3.854648428285383*^9}, 
   3.854648918875536*^9, 3.854722100136468*^9, 3.854723758080805*^9},
 CellLabel->
  "Out[129]=",ExpressionUUID->"d282b9b9-bba6-4cdb-905d-ddec0fd56478"]
}, Open  ]],

Cell[TextData[{
 "Variable ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["x", "min"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "784fd34e-5d0d-4f4d-8aea-230924d73781"]
}], "Text",
 CellChangeTimes->{{3.8547220797759647`*^9, 
  3.854722083014557*^9}},ExpressionUUID->"5b070f5c-bad0-4bc7-84c1-\
f2826c775c96"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"model", " ", "=", " ", 
  RowBox[{"Estimate\[Alpha]AndXMin", "[", "sample", "]"}]}]], "Input",
 CellChangeTimes->{{3.8546420433232307`*^9, 3.854642046258017*^9}, {
  3.854645597093708*^9, 3.854645598519039*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"440cf495-aeb5-46eb-b6d0-dbcde109095b"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Alpha\"\>", "\[Rule]", "2.81`"}], ",", 
   RowBox[{"\<\"xMin\"\>", "\[Rule]", "1"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{
  3.8546420465564203`*^9, {3.854645595839739*^9, 3.854645599035714*^9}, 
   3.854721712694686*^9, {3.854721746513541*^9, 3.854721748774467*^9}, 
   3.855150973274815*^9, {3.855151219460086*^9, 3.855151221108446*^9}, 
   3.855151330331174*^9, {3.8551521790667877`*^9, 3.85515218046469*^9}, 
   3.855152215637795*^9, 3.855152268779916*^9, 3.855152370276009*^9, 
   3.8551524793097754`*^9},
 CellLabel->
  "Out[195]=",ExpressionUUID->"b84e1b8f-e815-46c5-829e-26c4801c6009"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ksOfSample", " ", "=", " ", 
  RowBox[{"KSStatistic", "[", 
   RowBox[{"sample", ",", "model"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.85464892466682*^9, 3.854648937722061*^9}},
 CellLabel->
  "In[193]:=",ExpressionUUID->"944a320b-48f0-4efd-a5b6-8e09d07d07b3"],

Cell[BoxData["0.008469680476279516`"], "Output",
 CellChangeTimes->{{3.854648925651717*^9, 3.854648937986274*^9}, 
   3.855151338375123*^9, 3.855152441012437*^9},
 CellLabel->
  "Out[193]=",ExpressionUUID->"13cc93fe-cf12-4ab6-97e4-d25ea95b4db0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KSStatistic", "[", 
  RowBox[{"GenerateBootstrapReplica", "[", 
   RowBox[{"sample", ",", "model"}], "]"}], "]"}]], "Input",
 CellLabel->
  "In[209]:=",ExpressionUUID->"c3b25d89-e87e-46ec-94b5-8e0a71c29ca2"],

Cell[BoxData["0.02039754074782811`"], "Output",
 CellChangeTimes->{{3.855152745926118*^9, 3.855152750586434*^9}, 
   3.8551530763180017`*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"9fac3fed-53fc-4a88-aca3-3a2a07534866"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ksValues", " ", "=", " ", 
   RowBox[{"ProgressTable", "[", 
    RowBox[{
     RowBox[{"KSStatistic", "[", 
      RowBox[{"GenerateBootstrapReplica", "[", 
       RowBox[{"sample", ",", "model"}], "]"}], "]"}], ",", "1000"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.854647113391102*^9, 3.854647117578534*^9}, {
  3.854647203095302*^9, 3.854647253261177*^9}, {3.8546475223983583`*^9, 
  3.854647523541*^9}, {3.855152493641851*^9, 3.855152501581258*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"1fd6de71-38e7-4890-9c2b-8cc0129ba2ca"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SmoothHistogram", "[", 
  RowBox[{"ksValues", ",", 
   RowBox[{"GridLines", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", "ksOfSample", "}"}], ",", 
      RowBox[{"{", "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.854648396974365*^9, 3.854648432677553*^9}},
 CellLabel->
  "In[202]:=",ExpressionUUID->"e14d1e46-95a8-4c93-b79c-580b9e84575d"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 120], 0.008333333333333333]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1: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
uhracGlX/v/W/8f/A4Sbtm8=
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{{0.008469680476279516}, {}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{-0.000016477594171677556`, 0.041959180556065255`}, {0., 
   69.4354972586837}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8546484011411343`*^9, 3.854648433286462*^9, 
  3.8546489488246202`*^9, 3.855152679728261*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"b6d41690-80ec-413e-b5ae-06d0cb2625ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox[
   RowBox[{"Count", "[", 
    RowBox[{"ksValues", ",", 
     RowBox[{"x_", " ", "/;", " ", 
      RowBox[{"x", ">", "ksOfSample"}]}]}], "]"}], 
   RowBox[{"Length", "[", "ksValues", "]"}]], "]"}]], "Input",
 CellChangeTimes->{{3.854648552720583*^9, 3.8546486294320297`*^9}},
 CellLabel->
  "In[203]:=",ExpressionUUID->"4e1798c5-2a6d-4d2f-8333-463e8d638924"],

Cell[BoxData["0.85`"], "Output",
 CellChangeTimes->{{3.854648589253949*^9, 3.854648635965611*^9}, 
   3.854648951168001*^9, 3.855152686523449*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"14e7c5f4-57e8-4fe3-8cd6-f645bee29756"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CalculateGOF", "[", "sample", "]"}]], "Input",
 CellChangeTimes->{{3.854649215884718*^9, 3.8546492182584667`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"394ea34a-7fc5-4a7d-9a8d-a379086b42ed"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"Alpha\"\>", "\[Rule]", "2.0801388754938985`"}], ",", 
   RowBox[{"\<\"xMin\"\>", "\[Rule]", "4"}], ",", 
   RowBox[{"\<\"p-value\"\>", "\[Rule]", "0.8395`"}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{3.8546493000373774`*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"e318ba9e-8a0e-40ee-8d38-a7fefa9f9240"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1536, 832},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.3 para Linux x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"a6e4e336-7221-4bb1-9d45-8dcff3224744"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 170, 3, 132, "Title",ExpressionUUID->"d598f596-2801-4778-8c27-dca3abeee197"],
Cell[753, 27, 441, 10, 80, "Input",ExpressionUUID->"ea06bf2b-47a9-4df9-a1c3-95c1b9085f4a",
 InitializationCell->True],
Cell[1197, 39, 2323, 58, 414, "Input",ExpressionUUID->"58a37c1e-fe03-4d2e-af23-031428dc3f7c",
 InitializationCell->True],
Cell[3523, 99, 3789, 98, 619, "Input",ExpressionUUID->"797e8a45-3ac6-42ad-9d9f-dcac415f5695",
 InitializationCell->True],
Cell[7315, 199, 13044, 309, 2099, "Input",ExpressionUUID->"41e6f6ee-aee7-473b-a67a-f5f9b9951d54",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[20384, 512, 246, 4, 37, "Input",ExpressionUUID->"b7cba7ef-e555-45df-b783-3ccace02fcba"],
Cell[20633, 518, 2335, 32, 124, "Output",ExpressionUUID->"2ee18e45-4758-452c-a3f9-bf6a84672970"]
}, Open  ]],
Cell[22983, 553, 331, 10, 46, "Text",ExpressionUUID->"52f2c1be-5ac0-40d7-82c5-074323bf8130"],
Cell[CellGroupData[{
Cell[23339, 567, 497, 9, 37, "Input",ExpressionUUID->"f87b5041-8a67-4378-a373-817bfd2a10ac"],
Cell[23839, 578, 604, 12, 44, "Output",ExpressionUUID->"50e80d84-db4d-4319-9264-90522b4f6685"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24480, 595, 363, 7, 37, "Input",ExpressionUUID->"8b78ab32-51c8-4a33-afae-df58d9f3bcc2"],
Cell[24846, 604, 471, 10, 44, "Output",ExpressionUUID->"609378c4-4e73-432d-ac3e-10866c60e8f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25354, 619, 416, 8, 37, "Input",ExpressionUUID->"48b82f1e-faad-4af8-af77-5c3d3fa3d767"],
Cell[25773, 629, 324, 5, 42, "Output",ExpressionUUID->"d282b9b9-bba6-4cdb-905d-ddec0fd56478"]
}, Open  ]],
Cell[26112, 637, 332, 10, 46, "Text",ExpressionUUID->"5b070f5c-bad0-4bc7-84c1-f2826c775c96"],
Cell[CellGroupData[{
Cell[26469, 651, 318, 6, 37, "Input",ExpressionUUID->"440cf495-aeb5-46eb-b6d0-dbcde109095b"],
Cell[26790, 659, 689, 14, 44, "Output",ExpressionUUID->"b84e1b8f-e815-46c5-829e-26c4801c6009"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27516, 678, 287, 6, 37, "Input",ExpressionUUID->"944a320b-48f0-4efd-a5b6-8e09d07d07b3"],
Cell[27806, 686, 245, 4, 42, "Output",ExpressionUUID->"13cc93fe-cf12-4ab6-97e4-d25ea95b4db0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[28088, 695, 231, 5, 37, "Input",ExpressionUUID->"c3b25d89-e87e-46ec-94b5-8e0a71c29ca2"],
Cell[28322, 702, 224, 4, 42, "Output",ExpressionUUID->"9fac3fed-53fc-4a88-aca3-3a2a07534866"]
}, Open  ]],
Cell[28561, 709, 581, 13, 37, "Input",ExpressionUUID->"1fd6de71-38e7-4890-9c2b-8cc0129ba2ca"],
Cell[CellGroupData[{
Cell[29167, 726, 394, 10, 58, "Input",ExpressionUUID->"e14d1e46-95a8-4c93-b79c-580b9e84575d"],
Cell[29564, 738, 19294, 334, 311, "Output",ExpressionUUID->"b6d41690-80ec-413e-b5ae-06d0cb2625ef"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48895, 1077, 406, 10, 80, "Input",ExpressionUUID->"4e1798c5-2a6d-4d2f-8333-463e8d638924"],
Cell[49304, 1089, 229, 4, 42, "Output",ExpressionUUID->"14e7c5f4-57e8-4fe3-8cd6-f645bee29756"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49570, 1098, 221, 4, 37, "Input",ExpressionUUID->"394ea34a-7fc5-4a7d-9a8d-a379086b42ed"],
Cell[49794, 1104, 399, 9, 44, "Output",ExpressionUUID->"e318ba9e-8a0e-40ee-8d38-a7fefa9f9240"]
}, Open  ]]
}, Open  ]]
}
]
*)

